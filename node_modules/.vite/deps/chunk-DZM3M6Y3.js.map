{
  "version": 3,
  "sources": ["../../three/examples/jsm/geometries/ParametricFunctions.js"],
  "sourcesContent": ["\n/**\n * @module ParametricFunctions\n * @three_import import * as ParametricFunctions from 'three/addons/geometries/ParametricFunctions.js';\n */\n\n/**\n * A parametric function representing the Klein bottle.\n *\n * @param {number} v - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction klein( v, u, target ) {\n\n\tu *= Math.PI;\n\tv *= 2 * Math.PI;\n\n\tu = u * 2;\n\tlet x, z;\n\tif ( u < Math.PI ) {\n\n\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( u ) * Math.cos( v );\n\t\tz = - 8 * Math.sin( u ) - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( u ) * Math.cos( v );\n\n\t} else {\n\n\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( v + Math.PI );\n\t\tz = - 8 * Math.sin( u );\n\n\t}\n\n\tconst y = - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( v );\n\n\ttarget.set( x, y, z );\n\n}\n\n/**\n * A parametric function representing a flat plane.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} v - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction plane( u, v, target ) {\n\n\ttarget.set( u, 0, v );\n\n}\n\n/**\n * A parametric function representing a flat mobius strip.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} t - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction mobius( u, t, target ) {\n\n\t// http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\n\tu = u - 0.5;\n\tconst v = 2 * Math.PI * t;\n\n\tconst a = 2;\n\n\tconst x = Math.cos( v ) * ( a + u * Math.cos( v / 2 ) );\n\tconst y = Math.sin( v ) * ( a + u * Math.cos( v / 2 ) );\n\tconst z = u * Math.sin( v / 2 );\n\n\ttarget.set( x, y, z );\n\n}\n\n/**\n * A parametric function representing a volumetric mobius strip.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} t - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction mobius3d( u, t, target ) {\n\n\tu *= Math.PI;\n\tt *= 2 * Math.PI;\n\n\tu = u * 2;\n\tconst phi = u / 2;\n\tconst major = 2.25, a = 0.125, b = 0.65;\n\n\tlet x = a * Math.cos( t ) * Math.cos( phi ) - b * Math.sin( t ) * Math.sin( phi );\n\tconst z = a * Math.cos( t ) * Math.sin( phi ) + b * Math.sin( t ) * Math.cos( phi );\n\tconst y = ( major + x ) * Math.sin( u );\n\tx = ( major + x ) * Math.cos( u );\n\n\ttarget.set( x, y, z );\n\n}\n\nexport { klein, plane, mobius, mobius3d };\n"],
  "mappings": ";AAaA,SAAS,MAAO,GAAG,GAAG,QAAS;AAE9B,OAAK,KAAK;AACV,OAAK,IAAI,KAAK;AAEd,MAAI,IAAI;AACR,MAAI,GAAG;AACP,MAAK,IAAI,KAAK,IAAK;AAElB,QAAI,IAAI,KAAK,IAAK,CAAE,KAAM,IAAI,KAAK,IAAK,CAAE,KAAQ,KAAM,IAAI,KAAK,IAAK,CAAE,IAAI,KAAQ,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,CAAE;AAChH,QAAI,KAAM,KAAK,IAAK,CAAE,IAAI,KAAM,IAAI,KAAK,IAAK,CAAE,IAAI,KAAM,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,CAAE;AAAA,EAEvF,OAAO;AAEN,QAAI,IAAI,KAAK,IAAK,CAAE,KAAM,IAAI,KAAK,IAAK,CAAE,KAAQ,KAAM,IAAI,KAAK,IAAK,CAAE,IAAI,KAAQ,KAAK,IAAK,IAAI,KAAK,EAAG;AAC1G,QAAI,KAAM,KAAK,IAAK,CAAE;AAAA,EAEvB;AAEA,QAAM,IAAI,MAAQ,IAAI,KAAK,IAAK,CAAE,IAAI,KAAM,KAAK,IAAK,CAAE;AAExD,SAAO,IAAK,GAAG,GAAG,CAAE;AAErB;AASA,SAAS,MAAO,GAAG,GAAG,QAAS;AAE9B,SAAO,IAAK,GAAG,GAAG,CAAE;AAErB;AASA,SAAS,OAAQ,GAAG,GAAG,QAAS;AAG/B,MAAI,IAAI;AACR,QAAM,IAAI,IAAI,KAAK,KAAK;AAExB,QAAM,IAAI;AAEV,QAAM,IAAI,KAAK,IAAK,CAAE,KAAM,IAAI,IAAI,KAAK,IAAK,IAAI,CAAE;AACpD,QAAM,IAAI,KAAK,IAAK,CAAE,KAAM,IAAI,IAAI,KAAK,IAAK,IAAI,CAAE;AACpD,QAAM,IAAI,IAAI,KAAK,IAAK,IAAI,CAAE;AAE9B,SAAO,IAAK,GAAG,GAAG,CAAE;AAErB;AASA,SAAS,SAAU,GAAG,GAAG,QAAS;AAEjC,OAAK,KAAK;AACV,OAAK,IAAI,KAAK;AAEd,MAAI,IAAI;AACR,QAAM,MAAM,IAAI;AAChB,QAAM,QAAQ,MAAM,IAAI,OAAO,IAAI;AAEnC,MAAI,IAAI,IAAI,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,GAAI,IAAI,IAAI,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,GAAI;AAChF,QAAM,IAAI,IAAI,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,GAAI,IAAI,IAAI,KAAK,IAAK,CAAE,IAAI,KAAK,IAAK,GAAI;AAClF,QAAM,KAAM,QAAQ,KAAM,KAAK,IAAK,CAAE;AACtC,OAAM,QAAQ,KAAM,KAAK,IAAK,CAAE;AAEhC,SAAO,IAAK,GAAG,GAAG,CAAE;AAErB;",
  "names": []
}
